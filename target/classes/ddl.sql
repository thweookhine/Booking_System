-- Table: public.booking

-- DROP TABLE IF EXISTS public.booking;

CREATE TABLE IF NOT EXISTS public.booking
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    booking_time timestamp(6) without time zone,
    status character varying(255) COLLATE pg_catalog."default",
    class_schedule_id bigint,
    user_data_id bigint,
    user_package_id bigint,
    CONSTRAINT booking_pkey PRIMARY KEY (id),
    CONSTRAINT fk4byd9876vdnivbfitvo90mcya FOREIGN KEY (user_package_id)
        REFERENCES public.user_package (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkek3h61ahuobsuamc0dkg8omi1 FOREIGN KEY (user_data_id)
        REFERENCES public.user_data (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkmn9mj87qi7fpvsek047je9vjb FOREIGN KEY (class_schedule_id)
        REFERENCES public.class_schedule (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT booking_status_check CHECK (status::text = ANY (ARRAY['BOOKED'::character varying, 'CANCELLED'::character varying, 'CHECKED_IN'::character varying, 'WAITLISTED'::character varying]::text[]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.booking
    OWNER to postgres;

-- Table: public.class_schedule

-- DROP TABLE IF EXISTS public.class_schedule;

CREATE TABLE IF NOT EXISTS public.class_schedule
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    country character varying(255) COLLATE pg_catalog."default",
    end_time timestamp(6) without time zone,
    is_ended boolean NOT NULL,
    max_slots integer NOT NULL,
    required_credits integer NOT NULL,
    start_time timestamp(6) without time zone,
    title character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT class_schedule_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.class_schedule
    OWNER to postgres;

-- Table: public.package_data

-- DROP TABLE IF EXISTS public.package_data;

CREATE TABLE IF NOT EXISTS public.package_data
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    country character varying(255) COLLATE pg_catalog."default",
    created_at timestamp(6) without time zone NOT NULL,
    credits integer NOT NULL,
    is_available boolean NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    price numeric(38,2),
    updated_at timestamp(6) without time zone NOT NULL,
    valid_days integer NOT NULL,
    CONSTRAINT package_data_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.package_data
    OWNER to postgres;

-- Table: public.user_data

-- DROP TABLE IF EXISTS public.user_data;

CREATE TABLE IF NOT EXISTS public.user_data
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    country character varying(255) COLLATE pg_catalog."default",
    created_at timestamp(6) without time zone NOT NULL,
    email character varying(255) COLLATE pg_catalog."default",
    is_verified boolean NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    reset_token character varying(255) COLLATE pg_catalog."default",
    role character varying(255) COLLATE pg_catalog."default",
    updated_at timestamp(6) without time zone NOT NULL,
    verification_token character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT user_data_pkey PRIMARY KEY (id),
    CONSTRAINT user_data_role_check CHECK (role::text = ANY (ARRAY['USER'::character varying, 'ADMIN'::character varying]::text[]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_data
    OWNER to postgres;

-- Table: public.user_package

-- DROP TABLE IF EXISTS public.user_package;

CREATE TABLE IF NOT EXISTS public.user_package
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    expiry_date timestamp(6) without time zone,
    purchase_date timestamp(6) without time zone,
    remaining_credits integer NOT NULL,
    package_data_id bigint,
    user_data_id bigint,
    CONSTRAINT user_package_pkey PRIMARY KEY (id),
    CONSTRAINT fkee2itj07yjq0hejevkluyunhr FOREIGN KEY (package_data_id)
        REFERENCES public.package_data (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkiwl5q2f88hw6h4y0kn1x1n8t FOREIGN KEY (user_data_id)
        REFERENCES public.user_data (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.user_package
    OWNER to postgres;

-- Table: public.waitlist

-- DROP TABLE IF EXISTS public.waitlist;

CREATE TABLE IF NOT EXISTS public.waitlist
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    added_at timestamp(6) without time zone,
    moved_to_booking boolean NOT NULL,
    class_schedule_id bigint,
    user_data_id bigint,
    CONSTRAINT waitlist_pkey PRIMARY KEY (id),
    CONSTRAINT fkcgkgqf2v17m2ygpgnsl93ea5u FOREIGN KEY (user_data_id)
        REFERENCES public.user_data (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkis0ukbhi58u0duq9ve6dfcfky FOREIGN KEY (class_schedule_id)
        REFERENCES public.class_schedule (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.waitlist
    OWNER to postgres;